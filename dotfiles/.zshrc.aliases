# source ~/.config/.zsh/catppuccin_latte-zsh-syntax-highlighting.zsh
# Export

# Set the visual editor
export VISUAL=nvim

# Set the editor for git
export EDITOR="$VISUAL"

# Local binaries
export PATH="$PATH:$HOME/bin"
export PATH="$PATH:$HOME/.cargo/bin"
export PATH="$PATH:$HOME/.dotnet/tools"
export PATH="$PATH:$HOME/.bun/bin"

# Enable true colors and italic.
export TERM=xterm-256color-italic

# We want oh-my-zsh to show `~` when on the home folder
export DEFAULT_USER=`whoami`

# We want the default protocol of `hub` to be ssh for clone/push
export HUB_PROTOCOL=ssh

# ZFZ uses rg
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!{.git,node_modules}"'

# bat theme
export BAT_THEME="TwoDark"

# Navigation
# TODO: make a function instead, so that you type "code:<project>" and it navigates to
# `~/Developer/code/<project>`
alias code:home='cd ~/Developer/code'
alias code:enterprise='cd ~/Developer/code/enterprise'
alias code:vms='cd ~/Developer/vms'

alias vizion="cd ~/Developer/code/vizion"

# CLI tools
alias git=hub                                                   # Always use hub
alias ssh='TERM=xterm-256color ssh'
alias v='nvim .'
alias vs='nvim $(fzf)'
alias nvs='nvim $(fzf)'
alias mux=tmuxinator

alias nv='nvim .'
alias nvp='nvim -c "call FZFWithDevIcons()"'

# Quick alises
alias gccount='git rev-list --count develop..' # commits count between current branch and develop
alias dps='docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Ports}}\t{{.Status}}"'
alias did="vim +'normal Go' +'r!date' ~/did.txt"

alias dnav='git config --global delta.navigate true'
alias dnonav='git config --global delta.navigate false'
alias dvsp='git config --global delta.side-by-side true'
alias dsp='git config --global delta.side-by-side false'

gitPrUrl() {
    branchName=$(git rev-parse --abbrev-ref HEAD)
    prNumber=$(git pr list | grep $branchName | rg -e "#(\d+)" -r '$1' -o)

    if [ -z "$prNumber" ]; then
        echo "There is no PR open for this branch"
        return 1
    fi

    url=$(git browse -u -- pull/NUMBER | sed "s/NUMBER/$prNumber/g")
    echo $url
}
gitPrOpen() {
    url=$(gitPrUrl)
    if [ $? != 0 ]; then
        echo "There is no PR open for this branch"
        return 1
    fi
    open $url
}
alias git:pr:url=gitPrUrl
alias git:pr:open=gitPrOpen

printColors() {
    for i in {0..255}; do printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done
}
printBgColors() {
    for i in {0..255}; do printf "\x1b[48;5;${i}m     %-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done
}

zshPlugins() {
  if [[ `uname -m` == 'arm64' ]]; then
    local location="/opt/homebrew"
  else
    local location="/usr/local"
  fi

  source "$location/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
  source "$location/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
  source "$location/share/zsh/site-functions/_tmuxinator"
}
#source ~/.config/.zsh/catppuccin_latte-zsh-syntax-highlighting.zsh
zshPlugins


bindkey '^ ' autosuggest-accept

# Misc
catp() {
    cat package.json | grep $1
}

s() {
  rg $1 package.json
}

# cd hoook to initialize tokens for cloud/enterprise GitHub
chpwd() {
    setGithubVersion
}

setGithubVersion() {
    case $PWD in
        (*/Developer/code/enterprise*)
            type useEnterpriseGitHub > /dev/null && useEnterpriseGitHub
            ;;
        *)
            type useCloudGitHub > /dev/null && useCloudGitHub
            ;;
    esac
}

createEditorConfig() {
  ls .editorconfig > /dev/null 2>&1 
  if [ $? != 0 ]; then
    echo "root = true

[*]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2" >> .editorconfig
  else
    echo ".editorconfig file found. Nothing was changed."
  fi
}

# Create enterprise directory if it doesn't exist
mkdir -p ~/Developer/code/enterprise

export N_PREFIX=$HOME

# TODO: add a func for tmuxinator projects

. ~/.zshrc.tokens

if [[ ! -e ~/.zshrc.aliases.local ]]; then
  touch ~/.zshrc.aliases.local
fi

. ~/.zshrc.aliases.local

# We call this on source
setGithubVersion
